#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

int twoSum(int& nums, int target) {
    unordered_map<int, int> numIndexMap;
    int result;

    for (int i = 0; i < nums.size(); i++) {
        int complement = target - nums[i];

        if (numIndexMap.find(complement) != numIndexMap.end()) {
            result.push_back(numIndexMap[complement]);
            result.push_back(i);
            return result;
        }

        numIndexMap[nums[i]] = i;
    }

    return result;
}

int main() {
    int nums = {2, 7, 11, 15};
    int target = 9;

    int result = twoSum(nums, target);

    if (result.size() == 2) {
        cout << "Output: [" << result[0] << ", " << result[1] << "]" << endl;
    } else {
        cout << "No valid answer found." << endl;
    }

    return 0;
}
